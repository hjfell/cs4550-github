<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>Regular Expressions - Background</title>
	<link rel="Stylesheet" type="text/css" href="../../../story/css/slide.css" />    
    <link rel="Stylesheet" type="text/css" href="../../../story/css/screen.css"
          media="screen" />    
    <link rel="Stylesheet" type="text/css" href="../../../story/css/print.css"
          media="print" />
    
    <script type="text/javascript" src="../../../jQuery/jquery-1.7.1.min.js"></script>
    <style type="text/css">
	  .code {
	  	font-weight: bold;
	  	color: #00f;
	  	font-family: "Consolas", "Lucida Console", "Courier New", "Andale Mono", monospace;
	  }
	  .code:hover {
    	background-color: #ffff88;
	  }
	  </style>
</head>
<body>

<div class="pad">
<h1>Regular Expressions - Background</h1>

<p>Regular expressions came from the mathematical study of automata theory and formal languages.<br />
A <em>regular expression</em>, <b>RE</b> is the specification of the syntax of a simple language.</p>

<p><b>RE</b>s are used in methods to search, replace, and extract information from strings.</p>

<h2>History</h2>
from <a href="http://en.wikipedia.org/wiki/Regular_expression#History">Wikipedia</a>
<ul>
<li>In 1956, Stephen Kleene (âˆ‘*) developed mathematical notation of regular expressions to describe regular languages.</li>
<li>Ken Thompson built Kleene's notation into the editor QED as a means to match patterns in text files.</li>
<li>Variations of <b>RE</b>s were used in Unix programs at Bell Labs in the 1970s, including vi, lex, sed, AWK, and expr, and Emacs.</li>
<li>In the 1980s more complicated regular expressions arose in Perl, derived from a regex library written by Henry Spencer.</li>
<li>The syntax of regular expressions in JavaScript is close to the original formulation from Bell Labs, with some extensions adopted from Perl.</li>
</ul>

<h2>Javascript methods that work with regular expressions:</h2>
<pre class="code">
regexp.exec
regexp.test
string.match
string.replace
string.search
string.split. 
</pre>

<h2 style="color:red">Regular expressions can be hard to read and write and easy to mess up.</h2>

</div>
</body>
</html>
